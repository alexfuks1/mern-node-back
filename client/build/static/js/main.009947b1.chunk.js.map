{"version":3,"sources":["post/apiPost.js","components/index.js","post/CreateComment.js","post/Posts.js","post/CreatePost.js","pages/Home.js","userAuth/Signup.js","userAuth/SignIn.js","pages/Navbar.js","userAuth/Userapi.js","userAuth/DeleteUser.js","userAuth/FollowBtnProfile.js","userAuth/UserProTabs.js","userAuth/UserProfile.js","userAuth/Users.js","userAuth/updateProfile.js","components/PrivateRoute.js","userAuth/FindUsers.js","post/NewPost.js","post/SinglePost.js","post/UpdatePost.js","MainRouter.js","App.js","index.js"],"names":["create","userId","token","post","fetch","process","method","headers","Accept","Authorization","body","then","response","json","catch","err","console","log","singlepost","postId","postByUser","remove","update","like","JSON","stringify","unlike","comment","uncomment","signup","user","signin","authenticate","jwt","next","window","localStorage","setItem","signOut","removeItem","isAuthenticated","getItem","parse","CreateComment","show","dimmer","setState","open","close","handleChange","event","text","target","value","addComment","e","preventDefault","_id","props","state","data","error","updateComment","comments","deleteComment","deleteConfirmed","confirm","newPostForm","className","Modal","onClose","Header","Content","image","Description","Grid","Column","columns","divided","Row","Form","onSubmit","TextArea","placeholder","onChange","Actions","Button","onClick","color","positive","icon","labelPosition","content","loading","redirectToProfile","this","to","panes","menuItem","render","Tab","Pane","attached","map","i","List","Item","floated","postedBy","Image","avatar","size","src","as","name","Date","created","toDateString","Container","menu","Dimmer","active","Loader","inverted","React","Component","Posts","createComment","title","displayPosts","posts","Card","Group","itemsPerRow","posterId","posterName","key","circular","style","width","height","Meta","Icon","substring","extra","basic","margin","length","inline","CreatePost","isFormValid","fileSize","files","postData","set","handleSubmit","photo","Input","fluid","iconPosition","type","accept","FormData","photoUrl","getTime","Segment","Home","marginTop","Signup","email","password","redirectToSignIn","textAlign","verticalAlign","maxWidth","raised","SignIn","redirectUser","withRouter","history","Menu","fixed","push","position","read","removeUser","updateUserData","auth","follow","followId","unfollow","unfollowId","DeleteUser","deleteRedirect","deleteUserAcc","deleteUser","FollowBtnProfile","followClick","onButtonClick","unFollowClick","following","primary","UserProTabs","errorFollowing","followers","person","animated","selection","secondary","pointing","UserProfile","checkFollow","find","follower","clickFollowButton","callApi","init","redirectToSignin","loadPostByUser","match","params","celled","onError","vertical","relaxed","about","compact","Users","users","alt","updateProfile","id","test","userData","updateUser","rounded","PrivateRoute","component","rest","pathname","from","location","FindUsers","toFollow","splice","followMessage","displayUsers","findUser","Message","floating","NewPost","SinglePost","redirectToHome","postDeleted","deleted","likes","componentDidMount","handleLike","displaySingleComment","Label","showModal","deletePost","UpdatePost","MainRouter","exact","path","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.009947b1.chunk.js","sourcesContent":["export const create = (userId, token, post) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/new/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: post\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const getAllPosts =()=>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/posts/`,{\r\n        method:\"GET\"\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\nexport const singlepost = postId => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const postByUser = (userId,token) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/posts/by/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const remove = (postId, token) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const update = (postId, token, post) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\r\n        method:\"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:post\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\nexport const like = (userId, token, postId) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/like`, {\r\n        method:\"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify({userId,postId})\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\nexport const unlike = (userId, token, postId) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/unlike`, {\r\n        method:\"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify({userId,postId})\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\nexport const comment = (userId, token, postId, comment) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/comment`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ userId, postId, comment })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const uncomment = (userId, token, postId,comment) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/post/uncomment`, {\r\n        method:\"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify({userId,postId,comment})\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n","export const signup = user => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const authenticate=(jwt, next)=> {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"jwt\", JSON.stringify(jwt));\r\n      next()\r\n    }\r\n}\r\n\r\nexport const signOut = (next) => {\r\n    if (typeof window !== \"undefined\") localStorage.removeItem(\"jwt\");\r\n    next()\r\n    return fetch(\"`${process.env.REACT_APP_API_URL}/signout`\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n  \r\nexport const isAuthenticated = () => {\r\n    if (typeof window === \"undefined\") {\r\n      return false\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      return JSON.parse(localStorage.getItem(\"jwt\"));\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n}","import React from 'react';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { comment, uncomment } from './apiPost';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Grid,\r\n    Form,\r\n    Image,\r\n    Header,\r\n    Button,\r\n    Comment,\r\n    Dimmer,\r\n    Tab,\r\n    Modal,\r\n    List,\r\n    Loader,\r\n    Container,\r\n    TextArea,\r\n    Segment\r\n} from \"semantic-ui-react\";\r\nclass CreateComment extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: \"\",\r\n            error: \"\",\r\n            loading: false,\r\n            redirectToProfile: false,\r\n            open: false,\r\n        }\r\n    }\r\n    show = (dimmer) => () => this.setState({ dimmer, open: true });\r\n    close = () => this.setState({ open: false });\r\n\r\n    handleChange = event => {\r\n        this.setState({ text: event.target.value })\r\n\r\n    }\r\n    addComment = e => {\r\n        e.preventDefault();\r\n        const userId = isAuthenticated().user._id;\r\n        const postId = this.props.postId;\r\n        const token = isAuthenticated().token;\r\n        comment(userId, token, postId, { text: this.state.text })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log(data.error)\r\n                }\r\n                else {\r\n                    this.setState({ text: \"\", open: false })\r\n                    this.props.updateComment(data.comments);\r\n                }\r\n            })\r\n    }\r\n    deleteComment = comment => {\r\n        const userId = isAuthenticated().user._id;\r\n        const postId = this.props.postId;\r\n        const token = isAuthenticated().token;\r\n        uncomment(userId, token, postId, comment)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log(data.error)\r\n                }\r\n                else {\r\n                    this.setState({ text: \"\", open: false })\r\n                    this.props.updateComment(data.comments);\r\n                }\r\n            })\r\n    };\r\n\r\n    deleteConfirmed = comment => {\r\n        let answer = window.confirm('Are you sure you want to delete your comment?');\r\n        if (answer) {\r\n            this.deleteComment(comment);\r\n        }\r\n    };\r\n\r\n    newPostForm = () => {\r\n        const { dimmer, text } = this.state\r\n        const { open } = this.props\r\n        return (\r\n            <div className=\"ali\">\r\n                <Modal dimmer={dimmer} open={open} onClose={this.close}>\r\n                    <Modal.Header>Create comment</Modal.Header>\r\n                    <Modal.Content image>\r\n                        <Modal.Description>\r\n                            <Grid>\r\n                                <Grid.Column>\r\n                                    <Grid columns={1} divided>\r\n                                        <Grid.Row>\r\n                                            <Grid.Column>\r\n                                                <Form onSubmit={this.addComment}>\r\n                                                    <TextArea placeholder='Comment body' onChange={this.handleChange} />\r\n                                                </Form>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Description>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button onClick={this.addComment} color='blue'>Create</Button>\r\n                        <Button\r\n                            positive\r\n                            icon='checkmark'\r\n                            labelPosition='right'\r\n                            content=\"Next time...\"\r\n                            onClick={this.close}\r\n                        />\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { user, redirectToProfile, error, loading } = this.state;\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${user._id}`} />\r\n        }\r\n        const { comments } = this.props\r\n        const panes = [\r\n            {\r\n                menuItem: 'Comments',\r\n                render: () => <Tab.Pane attached={false}>{comments.map((comment, i) =>\r\n                    (\r\n                        <List>\r\n                                <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    {isAuthenticated().user &&\r\n                                                isAuthenticated().user._id ===\r\n                                                    comment.postedBy._id && (\r\n                                                    <>\r\n                                                        <Button onClick={()=>{this.deleteConfirmed(comment)}} color=\"blue\">Delete comment</Button>\r\n                                                    </>\r\n                                                )}\r\n                                    </List.Content>\r\n                                    <Image floated=\"left\" avatar size=\"mini\" src={`${process.env.REACT_APP_API_URL}/user/photo/${comment.postedBy._id}`}/>\r\n                                    <Header as=\"h4\">{comment.postedBy.name}</Header>\r\n                                    <List.Content>{new Date(comment.created).toDateString()}</List.Content>\r\n                                    <Header as=\"h4\">{comment.text}</Header>\r\n                                </List.Item>\r\n                            </List>\r\n                    )\r\n                )}</Tab.Pane>,\r\n            }\r\n        ]\r\n        return (\r\n            <Container>\r\n                {this.newPostForm()}\r\n                {error}\r\n                <Tab menu={{ text: true }} panes={panes} />\r\n                {loading ? (\r\n\r\n                    <Dimmer active>\r\n                        <Loader size=\"huge\" inverted>Loading, Post created...</Loader>\r\n                    </Dimmer>\r\n\r\n                ) : \"\"}\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\nexport default CreateComment;","import React from 'react';\r\nimport { Container, Header, Grid, Image, Card, Button, Loader, Icon, Menu, Label } from 'semantic-ui-react';\r\nimport { getAllPosts,singlePost } from './apiPost';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateComment from './CreateComment';\r\n\r\nclass Posts extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n            title:false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        getAllPosts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                this.setState({ posts: data });\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    createComment=()=>{\r\n        this.setState({title:true})\r\n    }\r\n    displayPosts = posts => {\r\n        return (\r\n            <div>\r\n                <Card.Group itemsPerRow={1}>\r\n                    {posts.map((post, i) => {\r\n                        const posterId = post.postedBy ? post.postedBy._id : \"\"\r\n                        const posterName = post.postedBy ? post.postedBy.name : \"\"\r\n                        return (\r\n                            <Card key={i}>\r\n                                <Card.Content>\r\n                                    <Image\r\n                                        floated='left'\r\n                                        circular\r\n                                        style={{ width: \"40px\", height: \"40px\" }}\r\n                                        src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`}\r\n                                    />\r\n                                    <Card.Header color=\"blue\">\r\n                                        <Link to={`/user/${posterId}`}>{posterName}</Link>\r\n                                    </Card.Header>\r\n                                    <Card.Meta><Icon name=\"clock\" /><strong>{new Date(post.created).toDateString()}</strong></Card.Meta>\r\n                                    <Card.Meta>{post.title}</Card.Meta>\r\n                                    <Card.Content color=\"black\">{post.body.substring(0, 200)}</Card.Content>\r\n\r\n                                </Card.Content>\r\n                                <Card.Content extra>\r\n                                    <div>\r\n                                        <Button basic color='blue' floated=\"left\">\r\n                                            <Link to={`/post/${post._id}`}>\r\n                                                Read More\r\n                                            </Link>\r\n                                        </Button>\r\n                                    </div>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </Card.Group>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        const { posts } = this.state;\r\n        return (\r\n            <Container style={{ margin: '5px 0px' }} floated=\"right\">\r\n                <Header as=\"h2\">{!posts.length ? <Loader active inline='centered'>Loading</Loader> : \"Posts\"}</Header>\r\n                {this.displayPosts(posts)}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { create } from './apiPost';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Grid,\r\n    Form,\r\n    Segment,\r\n    Card,\r\n    Button,\r\n    Header,\r\n    Dimmer,\r\n    Image,\r\n    Modal,\r\n    Icon,\r\n    Loader,\r\n    Container,\r\n    GridColumn\r\n} from \"semantic-ui-react\";\r\n\r\nclass CreatePost extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            photo: \"\",\r\n            error: \"\",\r\n            fileSize: 0,\r\n            loading: false,\r\n            redirectToProfile: false,\r\n            user: {},\r\n            open: false,\r\n        }\r\n    }\r\n    show = (dimmer) => () => this.setState({ dimmer, open: true });\r\n\r\n    close = () => this.setState({ open: false });\r\n\r\n    componentDidMount() {\r\n        this.postData = new FormData();\r\n        this.setState({ user: isAuthenticated().user });\r\n    }\r\n    isFormValid = () => {\r\n        const { body, title, fileSize } = this.state;\r\n        if (fileSize > 1000000) {\r\n            this.setState({\r\n                error: \"File size should be less than 100kb\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (title.length === 0 || body.length === 0) {\r\n            this.setState({ error: \"All fields are required\", loading: false });\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({ error: \"\" });\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n        this.postData.set(name, value);\r\n        this.setState({ [name]: value, fileSize });\r\n\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n\r\n        if (this.isFormValid()) {\r\n            const userId = isAuthenticated().user._id;\r\n            const token = isAuthenticated().token;\r\n\r\n            create(userId, token, this.postData).then(data => {\r\n                if (data.error) this.setState({ error: data.error });\r\n                else {\r\n                    this.setState({ loading: false, title: \"\", body: \"\", photo: \"\", redirectToProfile: true, open: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    newPostForm = (title, body) => {\r\n        const { open, dimmer } = this.state\r\n        return (\r\n            <div className=\"ali\">\r\n                <Modal dimmer={dimmer} open={open} onClose={this.close}>\r\n                    <Modal.Header>Create Post</Modal.Header>\r\n                    <Modal.Content image>\r\n                        <Modal.Description>\r\n                            <Grid>\r\n                                <Grid.Column>\r\n                                    <Grid columns={1} divided>\r\n                                        <Grid.Row>\r\n                                            <Grid.Column>\r\n                                                <Form>\r\n                                                    <Form.Input fluid name=\"title\"\r\n                                                        icon=\"user\"\r\n                                                        iconPosition=\"left\"\r\n                                                        placeholder=\"Title\"\r\n                                                        onChange={this.handleChange(\"title\")}\r\n                                                        value={title}\r\n                                                    />\r\n                                                    <Form.TextArea name=\"body\"\r\n                                                        icon=\"user\"\r\n                                                        iconPosition=\"left\"\r\n                                                        placeholder=\"Body\"\r\n                                                        onChange={this.handleChange(\"body\")}\r\n                                                        value={body}\r\n                                                    />\r\n                                                    <Form.Input fluid name=\"photo\"\r\n                                                        type=\"file\"\r\n                                                        icon=\"photo\"\r\n                                                        iconPosition=\"left\"\r\n                                                        placeholder=\"Profile photo\"\r\n                                                        accept=\"image/*\"\r\n                                                        onChange={this.handleChange(\"photo\")}\r\n                                                    />\r\n                                                </Form>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Description>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button onClick={this.handleSubmit} color='blue'>Create</Button>\r\n                        <Button\r\n                            positive\r\n                            icon='checkmark'\r\n                            labelPosition='right'\r\n                            content=\"Yep, that's me\"\r\n                            onClick={this.close}\r\n                        />\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        const { open, dimmer, title, body, user, photo, redirectToProfile, error, loading } = this.state;\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${user._id}`} />\r\n        }\r\n        const photoUrl = user._id\r\n            ? `${\r\n            process.env.REACT_APP_API_URL\r\n            }/user/photo/${user._id}?${new Date().getTime()}`\r\n            : <Image src={`https://react.semantic-ui.com/images/wireframe/image.png`} size='small' />;\r\n        ;\r\n        const imageProps = {\r\n            avatar: true,\r\n            spaced: 'right',\r\n            src: '/images/avatar/small/elliot.jpg',\r\n        }\r\n        return (\r\n            <Container>\r\n                <Segment>\r\n                    <Grid columns='equal'>\r\n                        <Grid.Column>\r\n                        <Image src={photoUrl} style={{width:\"40px\",height:\"40px\"}} avatar/>\r\n                                <Link className=\"link\" to={`/user/${isAuthenticated().user._id}`}>{`${isAuthenticated().user.name} 's Profile`}</Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8}>\r\n                            \r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                        <Button color=\"blue\" floated=\"right\" onClick={this.show('inverted')} content='Create post' icon='add' labelPosition='left' />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Segment>\r\n                {this.newPostForm(title, body)}\r\n                {error}\r\n                {loading ? (\r\n\r\n                    <Dimmer active>\r\n                        <Loader size=\"huge\" inverted>Loading, Post created...</Loader>\r\n                    </Dimmer>\r\n\r\n                ) : \"\"}\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\nexport default CreatePost;","import React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react'\r\nimport Posts from '../post/Posts';\r\nimport CreatePost from '../post/CreatePost';\r\nconst Home = () => (\r\n  <div>\r\n    <Container style={{ marginTop: '85px' }}>\r\n    <CreatePost/>\r\n      <Segment>\r\n        <Posts/>\r\n        </Segment>\r\n    </Container>\r\n  </div>\r\n)\r\nexport default Home;","import React from 'react';\r\nimport { signup } from '../components';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Signup extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      redirectToSignIn:false\r\n    }\r\n  }\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ [name]: event.target.value });\r\n\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n    const user = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n\r\n    signup(user)\r\n      .then(data => {\r\n        if (data.error){\r\n          this.setState({ error: data.error,redirectToSignIn:true });\r\n        } \r\n\r\n        else {\r\n          this.setState({ name: \"\", email: \"\", password: \"\", error: \"\" });\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    const { name, email, password, error,redirectToSignIn } = this.state;\r\n    if(redirectToSignIn){\r\n      return <Redirect to=\"/signin\"/>\r\n    }\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Form size=\"large\">\r\n            <Segment raised>\r\n              <Header as=\"h2\" icon color=\"blue\" textAlign=\"center\" color=\"blue\">\r\n                Registration\r\n                <Icon name=\"signup\" />\r\n              </Header>\r\n              <Form.Input fluid name=\"name\"\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                onChange={this.handleChange(\"name\")}\r\n                value={name}\r\n              />\r\n              <Form.Input fluid name=\"email\"\r\n                icon=\"mail\"\r\n                type=\"email\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email\"\r\n                onChange={this.handleChange(\"email\")}\r\n                value={email}\r\n              />\r\n              <Form.Input fluid name=\"password\"\r\n                type=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange(\"password\")}\r\n                value={password}\r\n              />\r\n              <Button onClick={this.handleSubmit} color=\"blue\" fluid size=\"large\">Submit</Button>\r\n              <h5>Already a user? <Link to=\"/signin\">Signin</Link></h5>\r\n            </Segment>\r\n            {\r\n            error ? <Segment>\r\n              <Header as='h5' color='red'>{error}</Header>\r\n            </Segment> : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default Signup;","import React from 'react';\r\nimport { signin,authenticate } from '../components';\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Confirm\r\n} from \"semantic-ui-react\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      redirectUser: false,\r\n      loading: false\r\n    }\r\n  }\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ [name]: event.target.value });\r\n\r\n  }\r\n  \r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({loading:true})\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    signin(user)\r\n      .then(data => {\r\n        if (data.error) this.setState({ error: data.error,loading:false});\r\n\r\n        else {\r\n          authenticate(data, () => {\r\n            this.setState({ redirectUser: true });\r\n          });\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    const { name, email, password, error, redirectUser, loading } = this.state;\r\n    if (redirectUser) {\r\n      return <Redirect to=\"/\"/>\r\n    }\r\n    console.log(loading);\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Form size=\"large\">\r\n            <Segment raised>\r\n              <Header as=\"h2\" icon color=\"blue\" textAlign=\"center\" color=\"blue\">\r\n                Signin\r\n                <Icon name=\"sign-in\" />\r\n              </Header>\r\n              <Form.Input fluid name=\"email\"\r\n                icon=\"mail\"\r\n                type=\"email\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email\"\r\n                onChange={this.handleChange(\"email\")}\r\n                value={email}\r\n              />\r\n              <Form.Input fluid name=\"password\"\r\n                type=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange(\"password\")}\r\n                value={password}\r\n              />\r\n              <Button onClick={this.handleSubmit} color=\"blue\" fluid size=\"large\">Submit</Button>\r\n              <h5>Dont have a account? <Link to=\"/signup\">Registration</Link></h5>\r\n            </Segment>\r\n            {\r\n              error ? <Segment>\r\n                <Header as='h5' color='red'>{error}</Header>\r\n              </Segment> : (\r\n                  <span></span>\r\n                )\r\n            }\r\n          </Form>\r\n          {\r\n              loading ? \r\n              <Dimmer active>\r\n                <Loader size='huge'>Loading</Loader>\r\n              </Dimmer>:(\r\n                <div></div>\r\n              )\r\n            }\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default SignIn;","import React from 'react';\r\nimport {\r\n  Container,\r\n  Menu,\r\n  Icon,\r\n  Image,\r\n  Search\r\n} from 'semantic-ui-react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signOut, isAuthenticated } from '../components/index';\r\n\r\nconst Navbar = ({ history }) => (\r\n  <Menu size='huge' inverted color={'blue'} fixed=\"top\">\r\n    <Container>\r\n      {!isAuthenticated() && (\r\n        <>\r\n          <Menu.Item>\r\n            <Link to=\"/signin\">SIGNIN</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/signup\">SIGNUP</Link>\r\n          </Menu.Item>\r\n        </>\r\n      )}\r\n      {isAuthenticated() && (\r\n        <>\r\n          <Menu.Item>\r\n            <Link to=\"/\">HOME</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/users\">USERS</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item>\r\n            <Link onClick={() => signOut(() => history.push(\"/signin\"))} to=\"/signin\">SIGNOUT</Link>\r\n          </Menu.Item>\r\n          <Menu.Menu position='right'>\r\n            <Menu.Item>\r\n              <Link to={`/user/${isAuthenticated().user._id}`}>\r\n                <Icon name=\"user\" />\r\n                {`${isAuthenticated().user.name} 's Profile`}\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to={`/findpeople`}>\r\n                <Icon name=\"search\" />\r\n                FIND USERS\r\n              </Link>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </>\r\n      )}\r\n    </Container>\r\n  </Menu>\r\n)\r\nexport default withRouter(Navbar);\r\n","export const read = (userId, token) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\r\n        method:'PUT',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:user\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeUser =(userId,token)=>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`,{\r\n        method:\"DELETE\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\n\r\nexport const usersList =(userId,token)=>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/users/`,{\r\n        method:\"GET\"\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\n\r\nexport const updateUserData = (user,next) =>{\r\n    if(typeof window !== \"undefined\"){\r\n        if(localStorage.getItem('jwt')){\r\n            let auth = JSON.parse(localStorage.getItem('jwt'));\r\n            auth.user = user;\r\n            localStorage.setItem('jwt',JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId, token, followId) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/follow`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({userId,followId})\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const unfollow = (userId, token, unfollowId) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/unfollow`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({userId,unfollowId})\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const findUser = (userId, token) => {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/findpeople/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Grid, Loader, Image, Segment, Button } from 'semantic-ui-react'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { removeUser } from './Userapi';\r\nimport { signOut } from '../components/index';\r\n\r\nclass DeleteUser extends React.Component {\r\n    state = {\r\n        deleteRedirect: false\r\n    }\r\n    deleteUserAcc = () => {\r\n        const token = isAuthenticated().token;\r\n        const userId = this.props.userId;\r\n        removeUser(userId, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log(data.error);\r\n                }\r\n                else {\r\n                    signOut(() => console.log(\"User Deleted!\"));\r\n                    this.setState({ deleteRedirect: true });\r\n                }\r\n            })\r\n    }\r\n    deleteUser = () => {\r\n        let deleteAnswer = (window.confirm(\"Are you sure you want to delete your account?\"));\r\n        if (deleteAnswer) {\r\n            this.deleteUserAcc();\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.deleteRedirect) {\r\n            return <Redirect to=\"/signup\" />\r\n        }\r\n        return (\r\n            <div>\r\n                <Button color='red' onClick={this.deleteUser} content=\"Delete Profile\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DeleteUser;","import React from 'react';\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport { follow,unfollow } from './Userapi';\r\n\r\n\r\nclass FollowBtnProfile extends React.Component {\r\n    followClick = () => {\r\n        this.props.onButtonClick(follow);\r\n    }\r\n    unFollowClick = () => {\r\n        this.props.onButtonClick(unfollow);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.props.following ? \r\n                    (\r\n                        <Button onClick={this.followClick} basic primary><Icon name='check' />Follow</Button>\r\n                    ):(\r\n                        <Button onClick={this.unFollowClick} color=\"red\"><Icon name='remove' /> UnFollow</Button>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FollowBtnProfile;","import React from 'react';\r\nimport { Tab, Button, List, Image, Header } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport DefaultImg from '../components/DefaultImg';\r\nclass UserProTabs extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errorFollowing: \"This user without following\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { following, followers, errorFollowing,posts } = this.props;\r\n        const panes = [\r\n            {\r\n                menuItem: 'Followers',\r\n                render: () => <Tab.Pane attached={false}>{followers.map((person, i) =>\r\n                    (\r\n                        <Link to={`/user/${person._id}`} key={i}>\r\n                            <List animated selection verticalAlign='middle'>\r\n                                <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                        <Button color=\"blue\">Add</Button>\r\n                                    </List.Content>\r\n                                    <Image avatar size=\"mini\" src={`${process.env.REACT_APP_API_URL}/user/photo/${person._id}`}\r\n                                         />\r\n                                    <List.Content>{person.name}</List.Content>\r\n                                </List.Item>\r\n                            </List>\r\n                        </Link>\r\n                    )\r\n                )}</Tab.Pane>,\r\n            },\r\n            {\r\n                menuItem: 'Following',\r\n                render: () => <Tab.Pane attached={false}>{following.map((person, i) =>\r\n                    (\r\n                        <Link to={`/user/${person._id}`} key={i}>\r\n                            <List selection verticalAlign='middle'>\r\n                                <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                        <Button color=\"blue\">Add</Button>\r\n                                    </List.Content>\r\n                                    <Image avatar size=\"mini\" src={`${process.env.REACT_APP_API_URL}/user/photo/${person._id}`}/>\r\n                                    <List.Content>{person.name}</List.Content>\r\n                                </List.Item>\r\n                            </List>\r\n                        </Link>\r\n                    )\r\n                )}</Tab.Pane>,\r\n            },\r\n            {\r\n                menuItem: 'Posts',\r\n                render: () => <Tab.Pane attached={false}>{posts.map((post, i) =>\r\n                    (\r\n                        <Link to={`/post/${post._id}`} key={i}>\r\n                        <List animated selection verticalAlign='middle'>\r\n                            <List.Item>\r\n                                <List.Content floated='right'>\r\n                                    <Button color=\"blue\">Show post</Button>\r\n                                </List.Content>\r\n                                <Header as=\"h5\">{post.title}</Header>\r\n                            </List.Item>\r\n                        </List>\r\n                    </Link>\r\n                    )\r\n                )}</Tab.Pane>,\r\n            }\r\n        ]\r\n        return (\r\n            <div className=\"ale\">\r\n                <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserProTabs;","import React from 'react';\r\nimport { Container, Header, Icon, Label, Grid, List, Image, Menu, Segment, Button } from 'semantic-ui-react'\r\nimport { isAuthenticated } from '../components';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { read } from '../userAuth/Userapi';\r\nimport {postByUser} from '../post/apiPost';\r\nimport DeleteUser from './DeleteUser';\r\nimport FollowBtnProfile from '../userAuth/FollowBtnProfile';\r\nimport UserProTabs from './UserProTabs';\r\n\r\n\r\nclass UserProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user:{ following:[], followers:[]},\r\n            redirectToSignin: false,\r\n            following:false,\r\n            error:\"\",\r\n            posts: []\r\n        }\r\n    }\r\n    checkFollow = user => {\r\n        const jwt = isAuthenticated();\r\n        const match = user.followers.find(follower => {\r\n          return follower._id === jwt.user._id;\r\n        });\r\n        return match\r\n    };\r\n\r\n    clickFollowButton = callApi => {\r\n        const userId = isAuthenticated().user._id;\r\n        const token = isAuthenticated().token;\r\n    \r\n        callApi(userId, token, this.state.user._id).then(data => {\r\n          if (data.error) {\r\n            this.setState({ error: data.error });\r\n          } else {\r\n            this.setState({ user: data, following: !this.state.following });\r\n          }\r\n        });\r\n    };\r\n    init = userId => {\r\n        const token = isAuthenticated().token;\r\n        read(userId, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    return this.setState({ redirectToSignin: true });\r\n                }\r\n                else {\r\n                    let following = this.checkFollow(data)\r\n                    this.setState({ user:data,following});\r\n                    this.loadPostByUser(data._id)\r\n                }\r\n            })\r\n    }\r\n    loadPostByUser = userId => {\r\n        const token = isAuthenticated().token;\r\n        postByUser(userId,token).then(data=>{\r\n            if(data.error) console.log(data.error);\r\n            else{\r\n                this.setState({posts:data});\r\n            }\r\n        })\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.userId\r\n        this.init(userId);\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        const userId = props.match.params.userId\r\n        this.init(userId);\r\n    }\r\n    render() {\r\n        const { redirectToSignin, user,following,followers,posts } = this.state;\r\n\r\n        if (redirectToSignin) return <Redirect to=\"/signin\" />\r\n        const photoUrl = user._id\r\n            ? `${\r\n            process.env.REACT_APP_API_URL\r\n            }/user/photo/${user._id}?${new Date().getTime()}`\r\n            : <Image src={`https://react.semantic-ui.com/images/wireframe/image.png`} size='small' />;\r\n        ;\r\n        return (\r\n            <Container style={{ marginTop: '85px' }}>\r\n                <Header as='h1'>My Profile</Header>\r\n                <Grid celled>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={3}>\r\n                        <Image onError={i => (i.target.src=`https://react.semantic-ui.com/images/wireframe/image.png`)} src={photoUrl} />\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={13}>\r\n                            <Menu text vertical>\r\n                                <List divided relaxed>\r\n                                    <List.Item>\r\n                                        <List.Icon name='user' size='large' verticalAlign='middle' />\r\n                                        <List.Content>\r\n                                            <List.Description as='a'>{user.name}</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='mail' size='large' verticalAlign='middle' />\r\n                                        <List.Content>\r\n                                            <List.Description as='a'>{user.email}</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='star' color=\"black\" size='large' verticalAlign='middle' />\r\n                                        <List.Content>\r\n                                            <List.Description as='a'>{user.about}</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name='clock' size='large' verticalAlign='middle' />\r\n                                        <List.Content>\r\n                                            <List.Description as='a'>{`Joined ${new Date(user.created).toDateString()}`}</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                </List>\r\n                            </Menu>\r\n                            {\r\n                            isAuthenticated().user && isAuthenticated().user._id == user._id ? (\r\n                                <div className='ui two buttons'>\r\n                                    <Menu text compact floated=\"right\">\r\n                                        <Menu.Item as='a'>\r\n                                            <Link to={`/user/edit/${user._id}`}>\r\n                                                <Button color='blue'>\r\n                                                    Edit profile\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <DeleteUser userId={user._id}/>\r\n                                    </Menu.Item>\r\n                                    </Menu>\r\n                                </div>\r\n                            ) :(\r\n                               <FollowBtnProfile \r\n                                following={this.state.following}\r\n                                onButtonClick={this.clickFollowButton}\r\n                                />\r\n                            )}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <UserProTabs posts={posts} followers={user.followers} following={user.following}/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport { Container, Header, Grid, Image, Card, Button, Segment, Icon,Search } from 'semantic-ui-react';\r\nimport { usersList } from './Userapi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Users extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        usersList().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                this.setState({ users: data });\r\n            }\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { users } = this.state;\r\n        return (\r\n            <Container style={{ margin: '85px 25px' }} floated=\"right\">\r\n                <Header as=\"h2\">Users</Header>\r\n                <br />\r\n                <Card.Group itemsPerRow={4}>\r\n                    {users.map((user, i) => (\r\n                        <Card key={i} floated=\"left\">\r\n                            <Image src={`${\r\n                                process.env.REACT_APP_API_URL\r\n                                }/user/photo/${user._id}`} alt={user.name}\r\n                                onError={i => (i.target.src = `https://react.semantic-ui.com/images/wireframe/image.png`)}\r\n                            />\r\n                            <Card.Content>\r\n                                <Card.Header>{user.name}</Card.Header>\r\n                                <Card.Meta>\r\n                                    <span className='date'>{user.email}</span>\r\n                                </Card.Meta>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                                <a>\r\n                                    <Icon name='user' />\r\n                                    22 Friends\r\n                                </a>\r\n                            </Card.Content>\r\n                            <Button basic color='blue'>\r\n                                <Link to={`/user/${user._id}`}>VIEW PROFILE</Link>\r\n                            </Button>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default Users;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { read, update,updateUserData } from './Userapi';\r\nimport {\r\n    Grid,\r\n    Form,\r\n    Segment,\r\n    Button,\r\n    Header,\r\n    Dimmer,\r\n    Image,\r\n    Icon,\r\n    Loader,\r\n    Container\r\n} from \"semantic-ui-react\";\r\n\r\nclass updateProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            about:\"\",\r\n            redirectToProfile: false,\r\n            error: \"\",\r\n            fileSize: 0,\r\n            loading: false\r\n        }\r\n    }\r\n    init = userId => {\r\n        const token = isAuthenticated().token;\r\n        read(userId, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    this.setState({ redirectToProfile: true });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        id: data._id,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        error: \"\",\r\n                        about:data.about\r\n                    });\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.userData = new FormData();\r\n        const userId = this.props.match.params.userId;\r\n        this.init(userId);\r\n    }\r\n    isFormValid = () => {\r\n        const { name, email, password, fileSize } = this.state;\r\n        if (fileSize > 1000000) {\r\n            this.setState({\r\n                error: \"File size should be less than 100kb\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (name.length === 0) {\r\n            this.setState({ error: \"Name is required\", loading: false });\r\n            return false;\r\n        }\r\n        // email@domain.com\r\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n            this.setState({\r\n                error: \"A valid Email is required\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (password.length >= 1 && password.length <= 5) {\r\n            this.setState({\r\n                error: \"Password must be at least 6 characters long\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({ error: \"\" });\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n        this.userData.set(name, value);\r\n        this.setState({ [name]: value, fileSize });\r\n\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        if (this.isFormValid()) {\r\n            const userId = this.props.match.params.userId\r\n            const token = isAuthenticated().token;\r\n\r\n            update(userId, token, this.userData).then(data => {\r\n                if (data.error) this.setState({ error: data.error });\r\n                else {\r\n                    updateUserData(data,()=>{\r\n                        this.setState({ redirectToProfile: true });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    updateUser = (name, email, password, loading,about) => (\r\n        <div>\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\" style={{ marginTop: '85px' }}>\r\n                <Grid.Column style={{ maxWidth: 1000 }}>\r\n                    <Form size=\"large\">\r\n                        <Segment>\r\n                            <Header as=\"h2\" icon color=\"blue\" textAlign=\"center\" color=\"blue\">\r\n                                Registretion\r\n                                <Icon name=\"signup\" />\r\n                            </Header>\r\n                            <Form.Input fluid name=\"name\"\r\n                                icon=\"user\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Username\"\r\n                                onChange={this.handleChange(\"name\")}\r\n                                value={name}\r\n                            />\r\n                            <Form.Input fluid name=\"email\"\r\n                                icon=\"mail\"\r\n                                type=\"email\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.handleChange(\"email\")}\r\n                                value={email}\r\n                            />\r\n                            <Form.Input fluid name=\"About\"\r\n                                icon=\"user\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"About\"\r\n                                onChange={this.handleChange(\"about\")}\r\n                                value={about}\r\n                            />\r\n                            <Form.Input fluid name=\"password\"\r\n                                type=\"password\"\r\n                                icon=\"lock\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.handleChange(\"password\")}\r\n                                value={password}\r\n                            />\r\n                            <Form.Input fluid name=\"password\"\r\n                                type=\"file\"\r\n                                icon=\"photo\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Profile photo\"\r\n                                accept=\"image/*\"\r\n                                onChange={this.handleChange(\"photo\")}\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color=\"blue\" fluid size=\"large\">Update</Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        const { id, name, email, password, redirectToProfile, error, loading } = this.state;\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${id}`} />\r\n        }\r\n        const photoUrl = id\r\n            ? `${\r\n            process.env.REACT_APP_API_URL\r\n            }/user/photo/${id}?${new Date().getTime()}`\r\n            : <Image src='https://react.semantic-ui.com/images/wireframe/image.png' size='small' rounded/>;\r\n        ;\r\n        return (\r\n            <Container>\r\n                {this.updateUser(name, email, password)}\r\n                {error}\r\n                {loading ? (\r\n\r\n                    <Dimmer active>\r\n                        <Loader size=\"huge\" inverted>Loading, Update User Profile</Loader>\r\n                    </Dimmer>\r\n\r\n                ) : \"\"}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default updateProfile;","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport {isAuthenticated} from './index';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Container, Header, Grid, Image, Card, Button, Segment, Icon,Message } from 'semantic-ui-react';\r\nimport { findUser,follow } from './Userapi';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../components/index';\r\n\r\nclass FindUsers extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            error:\"\",\r\n            open:false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const userId = isAuthenticated().user._id;\r\n        const token = isAuthenticated().token;\r\n\r\n        findUser(userId,token)\r\n        .then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                this.setState({ users: data });\r\n            }\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n    followClick=(user,i)=>{\r\n        const userId = isAuthenticated().user._id;\r\n        const token = isAuthenticated().token;\r\n\r\n        follow(userId, token, user._id).then(data => {\r\n            if (data.error) {\r\n                this.setState({ error: data.error });\r\n            } else {\r\n                let toFollow = this.state.users;\r\n                toFollow.splice(i, 1);\r\n                this.setState({\r\n                    users: toFollow,\r\n                    open: true,\r\n                    followMessage: `Following ${user.name}`\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n    displayUsers = users =>(\r\n        <Container style={{ margin: '85px 25px' }} floated=\"right\">\r\n            <Card.Group itemsPerRow={4}>\r\n                    {users.map((user, i) => (\r\n                        <Card key={i} floated=\"left\">\r\n                            <Image src={`${\r\n                                process.env.REACT_APP_API_URL\r\n                                }/user/photo/${user._id}`} alt={user.name}\r\n                                onError={i => (i.target.src = `https://react.semantic-ui.com/images/wireframe/image.png`)}\r\n                            />\r\n                            <Card.Content>\r\n                                <Card.Header>{user.name}</Card.Header>\r\n                                <Card.Meta>\r\n                                    <span className='date'>{user.email}</span>\r\n                                </Card.Meta>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                            <Button onClick={()=> this.followClick(user,i)} basic primary><Icon name='check' />Follow</Button>\r\n                            </Card.Content>\r\n                            <Button basic color='blue'>\r\n                                <Link to={`/user/${user._id}`}>VIEW PROFILE</Link>\r\n                            </Button>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n        </Container>\r\n    )\r\n    render() {\r\n        const { users,open,followMessage } = this.state;\r\n        return (\r\n            <Container style={{ margin: '85px 25px' }} floated=\"right\">\r\n                <Header as=\"h2\">Find Users</Header>\r\n                    <div>{open && (<Message floating>{followMessage}</Message>)}</div>\r\n                    {this.displayUsers(users)}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default FindUsers;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../components/index';\r\nimport {create} from './apiPost';\r\nimport {\r\n    Grid,\r\n    Form,\r\n    Segment,\r\n    Button,\r\n    Header,\r\n    Dimmer,\r\n    Image,\r\n    \r\n    Icon,\r\n    Loader,\r\n    Container\r\n} from \"semantic-ui-react\";\r\n\r\nclass NewPost extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n           title:\"\",\r\n           body:\"\",\r\n           photo:\"\",\r\n           error:\"\",\r\n           fileSize:0,\r\n           loading:false,\r\n           redirectToProfile:false,\r\n           user:{}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.postData = new FormData();\r\n        this.setState({user:isAuthenticated().user});\r\n    }\r\n    isFormValid = () => {\r\n        const { body,title,fileSize } = this.state;\r\n        if (fileSize > 1000000) {\r\n            this.setState({\r\n                error: \"File size should be less than 100kb\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (title.length === 0 || body.length === 0) {\r\n            this.setState({ error: \"All fields are required\", loading: false });\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({ error: \"\" });\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n        this.postData.set(name, value);\r\n        this.setState({ [name]: value, fileSize });\r\n\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n\r\n        if (this.isFormValid()) {\r\n            const userId = isAuthenticated().user._id;\r\n            const token = isAuthenticated().token;\r\n\r\n            create(userId, token, this.postData).then(data => {\r\n                if (data.error) this.setState({ error: data.error });\r\n                else {\r\n                    this.setState({ loading:false,title:\"\",body:\"\",photo:\"\",redirectToProfile:true });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    newPostForm = (title,body) => (\r\n        <div>\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\" style={{ marginTop: '85px' }}>\r\n                <Grid.Column style={{ maxWidth: 1000 }}>\r\n                    <Form size=\"large\">\r\n                        <Segment>\r\n                            <Header as=\"h2\" icon color=\"blue\" textAlign=\"center\" color=\"blue\">\r\n                                Create New Post\r\n                                <Icon name=\"signup\" />\r\n                            </Header>\r\n                            <Form.Input fluid name=\"title\"\r\n                                icon=\"user\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Title\"\r\n                                onChange={this.handleChange(\"title\")}\r\n                                value={title}\r\n                            />\r\n                            <Form.Input fluid name=\"body\"\r\n                                icon=\"mail\"\r\n                                type=\"email\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Body\"\r\n                                onChange={this.handleChange(\"body\")}\r\n                                value={body}\r\n                            />\r\n                            <Form.Input fluid name=\"photo\"\r\n                                type=\"file\"\r\n                                icon=\"photo\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Profile photo\"\r\n                                accept=\"image/*\"\r\n                                onChange={this.handleChange(\"photo\")}\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color=\"blue\" fluid size=\"large\">Create post</Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        const { title,body,user,photo,redirectToProfile,error,loading } = this.state;\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${user._id}`} />\r\n        }\r\n        return (\r\n            <Container>\r\n                {this.newPostForm(title,body)}\r\n                {error}\r\n                {/* {loading ? (\r\n\r\n                    <Dimmer active>\r\n                        <Loader size=\"huge\" inverted>Loading, Post created...</Loader>\r\n                    </Dimmer>\r\n\r\n                ) : \"\"} */}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default NewPost;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { singlepost, remove, like, unlike, comment,uncomment } from './apiPost';\r\nimport CreateComment from './CreateComment';\r\nimport _ from 'lodash';\r\nimport {\r\n  Grid,\r\n  Comment,\r\n  Tab,\r\n  Button,\r\n  Header,\r\n  List,\r\n  Menu,\r\n  Label,\r\n  Image,\r\n  Card,\r\n  Icon,\r\n  Loader,\r\n  Container\r\n} from \"semantic-ui-react\";\r\n\r\nclass SinglePost extends React.Component {\r\n  state = {\r\n    post: \"\",\r\n    redirectToHome: false,\r\n    postDeleted: false,\r\n    deleted: false,\r\n    open: false,\r\n    like: false,\r\n    likes: 0,\r\n    comments: []\r\n  }\r\n  componentDidMount = () => {\r\n    const postId = this.props.match.params.postId;\r\n    singlepost(postId).then(data => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      }\r\n      else {\r\n        this.setState({ post: data, likes: data.likes.length, comments: data.comments });\r\n      }\r\n    })\r\n  }\r\n  handleLike = () => {\r\n    let callApi = this.state.like ? unlike : like\r\n    const userId = isAuthenticated().user._id;\r\n    const postId = this.state.post._id;\r\n    const token = isAuthenticated().token;\r\n\r\n    callApi(userId, token, postId)\r\n      .then(data => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          this.setState({\r\n            like: !this.state.like,\r\n            likes: data.likes.length\r\n          });\r\n        }\r\n      });\r\n  }\r\n  updateComment = comments => {\r\n    this.setState({ comments })\r\n  }\r\n  displaySingleComment = post => {\r\n    const posterId = post.postedBy ? `/user/${post.postedBy._id}` : '';\r\n    const posterName = post.postedBy ? post.postedBy.name : ' Unknown';\r\n    const { like, likes, comments,open } = this.state;\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <Image\r\n            floated='left'\r\n            circular\r\n            style={{ width: \"50px\", height: \"50px\" }}\r\n            src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`}\r\n          />\r\n          <Card.Header color=\"blue\">\r\n            <Link to={`${posterId}`}>{posterName}</Link>\r\n          </Card.Header>\r\n          <Card.Meta><Icon name=\"clock\" /><strong>{new Date(post.created).toDateString()}</strong></Card.Meta>\r\n          <Card.Meta>{post.title}</Card.Meta>\r\n          <Card.Description>{post.body}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Menu compact>\r\n            <Menu.Item as='a' onClick={this.handleLike}>\r\n              <Icon name='like' /> Like\r\n              <Label color='blue' floating>\r\n                {likes}\r\n              </Label>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <Menu compact>\r\n            <Menu.Item as='a' onClick={this.addComment}>\r\n              <Icon name='add' /> Add comment\r\n              <Label color='blue' floating>\r\n                {comments.length}\r\n              </Label>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <Button basic color='blue' floated=\"right\">\r\n            <Icon name=\"angle double left\" />\r\n            <Link to={`/`}> Back to posts</Link>\r\n          </Button>\r\n          {isAuthenticated().user && isAuthenticated().user._id === post.postedBy._id && (\r\n                        <>\r\n                              <Button basic color='blue' floated=\"right\">\r\n                                <Icon name=\"angle double top\" />\r\n                                <Link to={`/post/edit/${post._id}`}>Update Post</Link>\r\n                              </Button>\r\n                              <Button onClick={this.deleteConfirmed} basic color='blue' floated=\"right\">\r\n                                <Icon name=\"angle double top\" />\r\n                                Delete Post\r\n                              </Button>\r\n                        </>\r\n                    )}\r\n          <CreateComment updateComment={this.updateComment} comments={comments} postId={post._id} open={open}/>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n  }\r\n  addComment=()=>{\r\n    this.setState({open:true})\r\n  }\r\n  showModal = () => {\r\n    this.setState({ open: true })\r\n  }\r\n  deletePost = () => {\r\n    const postId = this.props.match.params.postId;\r\n    const token = isAuthenticated().token;\r\n    remove(postId, token).then(data => {\r\n        if (data.error) {\r\n            console.log(data.error);\r\n        } else {\r\n            this.setState({ redirectToHome: true });\r\n        }\r\n    });\r\n};\r\n\r\ndeleteConfirmed = () => {\r\n    let answer = window.confirm('Are you sure you want to delete your post?');\r\n    if (answer) {\r\n        this.deletePost();\r\n    }\r\n};\r\n  render() {\r\n    const { post, redirectToHome, redirectToSignin, open, size, like, likes } = this.state;\r\n    // if (redirectToHome) {\r\n    //   return <Redirect to={`/`} />;\r\n    // } else if (redirectToSignin) {\r\n    //   return <Redirect to={`/signin`} />;\r\n    // }\r\n    return (\r\n      <Container style={{ marginTop: '85px' }}>\r\n        <Header as=\"h3\">Single Post</Header>\r\n        {/* <Card.Group itemsPerRow={1}>{this.displaySinglePost(post)}</Card.Group> */}\r\n        {!post ? (\r\n          <div>\r\n            <Loader active inline='centered'>Loading</Loader>\r\n          </div>\r\n        ) : (\r\n            <Card.Group itemsPerRow={1}>{this.displaySingleComment(post)}</Card.Group>\r\n\r\n          )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default SinglePost;","import React from 'react';\r\nimport { isAuthenticated } from '../components/index';\r\nimport { singlepost, update } from './apiPost';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Grid,\r\n    Form,\r\n    Segment,\r\n    Card,\r\n    Button,\r\n    Header,\r\n    Dimmer,\r\n    Image,\r\n    Modal,\r\n    Icon,\r\n    Loader,\r\n    Container,\r\n    GridColumn\r\n} from \"semantic-ui-react\";\r\n\r\nclass UpdatePost extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            id: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n            error: \"\",\r\n            fileSize: 0,\r\n            loading: false,\r\n            redirectToProfile: false\r\n        }\r\n    }\r\n    init = postId => {\r\n        singlepost(postId)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    this.setState({ redirectToProfile: true });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        id: data._id,\r\n                        title: data.title,\r\n                        body: data.body,\r\n                        error: \"\",\r\n                    });\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.postData = new FormData();\r\n        const postId = this.props.match.params.postId;\r\n        this.init(postId);\r\n    }\r\n    isFormValid = () => {\r\n        const { body, title, fileSize } = this.state;\r\n        if (fileSize > 1000000) {\r\n            this.setState({\r\n                error: \"File size should be less than 100kb\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (title.length === 0 || body.length === 0) {\r\n            this.setState({ error: \"All fields are required\", loading: false });\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({ error: \"\" });\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n        this.postData.set(name, value);\r\n        this.setState({ [name]: value, fileSize });\r\n\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        if (this.isFormValid()) {\r\n            const postId = this.state.id;\r\n            const token = isAuthenticated().token;\r\n\r\n            update(postId, token, this.postData).then(data => {\r\n                if (data.error) this.setState({ error: data.error });\r\n                else {\r\n                    this.setState({\r\n                        loading: false,\r\n                        title: \"\",\r\n                        body: \"\",\r\n                        redirectToProfile: true\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    newPostForm = (title, body) => (\r\n        <div>\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\" style={{ marginTop: '85px' }}>\r\n                <Grid.Column style={{ maxWidth: 1000 }}>\r\n                    <Form size=\"large\">\r\n                        <Segment>\r\n                            <Header as=\"h2\" icon color=\"blue\" textAlign=\"center\" color=\"blue\">\r\n                                Update post\r\n                                <Icon name=\"undo\" />\r\n                            </Header>\r\n                            <Form.Input fluid name=\"title\"\r\n                                icon=\"pencil alternate\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Title\"\r\n                                onChange={this.handleChange(\"title\")}\r\n                                value={title}\r\n                            />\r\n                            <Form.Input fluid name=\"body\"\r\n                                icon=\"mail\"\r\n                                type=\"email\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Body\"\r\n                                onChange={this.handleChange(\"body\")}\r\n                                value={body}\r\n                            />\r\n                            <Form.Input fluid name=\"photo\"\r\n                                type=\"file\"\r\n                                icon=\"photo\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Profile photo\"\r\n                                accept=\"image/*\"\r\n                                onChange={this.handleChange(\"photo\")}\r\n\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color=\"blue\" fluid size=\"large\">Update post</Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    );\r\n    render() {\r\n        const { title, body, redirectToProfile, id,loading } = this.state;\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${isAuthenticated().user._id}`} />\r\n        }\r\n        const photoUrl = id\r\n            ? `${\r\n            process.env.REACT_APP_API_URL\r\n            }/user/photo/${id}`\r\n            : <Image src='https://react.semantic-ui.com/images/wireframe/image.png' size='small' rounded />;\r\n        ;\r\n        return (\r\n            <Container style={{ marginTop: '85px' }}>\r\n                {this.newPostForm(title, body)}\r\n                <Image size=\"mini\" onError={i => (i.target.src = `https://react.semantic-ui.com/images/wireframe/image.png`)}\r\n                    src={`${\r\n                        process.env.REACT_APP_API_URL\r\n                        }/post/photo/${id}`}\r\n                />\r\n                {loading ? (\r\n\r\n                    <Dimmer active>\r\n                        <Loader size=\"huge\" inverted>Loading, Update Post</Loader>\r\n                    </Dimmer>\r\n\r\n                ) : \"\"}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default UpdatePost;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Signup from './userAuth/Signup';\r\nimport SignIn from './userAuth/SignIn';\r\nimport Navbar from './pages/Navbar';\r\nimport UserProfile from './userAuth/UserProfile';\r\nimport Users from './userAuth/Users';\r\nimport updateProfile from './userAuth/updateProfile';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport FindUsers from './userAuth/FindUsers';\r\nimport NewPost from './post/NewPost';\r\nimport SinglePost from './post/SinglePost';\r\nimport UpdatePost from './post/UpdatePost';\r\nconst MainRouter = () => (\r\n    <div> \r\n        <Navbar/>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <PrivateRoute exact path=\"/post/create\" component={NewPost} />\r\n            <Route exact path=\"/post/:postId\" component={SinglePost} />\r\n            <PrivateRoute exact path=\"/post/edit/:postId\" component={UpdatePost}/>\r\n            <Route exact path=\"/signin\" component={SignIn} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/users\" component={Users} />\r\n            <PrivateRoute exact path=\"/user/:userId\" component={UserProfile} />\r\n            <PrivateRoute exact path=\"/user/edit/:userId\" component={updateProfile}/>\r\n            <PrivateRoute exact path=\"/findpeople\" component={FindUsers} />\r\n        </Switch>\r\n    </div>\r\n)\r\nexport default MainRouter;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport MainRouter from './MainRouter';\nimport 'semantic-ui-css/semantic.min.css'\n\nconst App = () => (\n  <BrowserRouter>\n      <div><MainRouter/></div>\n  </BrowserRouter>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}